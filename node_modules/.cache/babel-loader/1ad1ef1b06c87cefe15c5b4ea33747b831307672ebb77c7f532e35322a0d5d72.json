{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alice\\\\Downloads\\\\Jogo-da-Forca\\\\jogo-forca\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Chute from \"./components/Chute\";\nimport Jogo from \"./components/Jogo\";\nimport Letras from \"./components/Letras\";\nimport palavras from \"./palavras\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [lista, setlista] = useState([]);\n  const [contadorErro, setContadorErro] = useState(0);\n  const [ativarBtn, setAtivarBtn] = useState(\"\");\n  const [verdadeOuFalse, setVerdadeOuFalso] = useState(true);\n  const [letrinha, setLetrinha] = useState('');\n  const [underline, setUnderline] = useState([]);\n  const [palavra, setPalavra] = useState('');\n  const [litLetras, setListLetras] = useState([]);\n  const [chutePalavra, setChutePalavra] = useState('');\n  const [cor, setCor] = useState('');\n  function inicializarJogo() {\n    const palavraSoteada = palavras[Math.floor(Math.random() * palavras.length)];\n    setPalavra(palavraSoteada);\n    const arrPalavra = [...palavraSoteada];\n    setListLetras(arrPalavra);\n    const listUnderline = arrPalavra.map(_l => \"_ \");\n    setUnderline(listUnderline);\n    setVerdadeOuFalso(false);\n    setAtivarBtn('ativado');\n    setContadorErro(0);\n    setCor('');\n    let newarr = [];\n    setlista(newarr);\n  }\n  ;\n  function letraEscolhida(letra) {\n    if (!lista.includes(letra)) {\n      setlista([...lista, letra]);\n      setLetrinha(letra);\n    }\n    let isL = letra;\n    verificar(isL);\n  }\n  function verificar(isL) {\n    if (palavra.includes(isL)) {\n      const novoArr = [...palavra];\n      const novoUnderline = [...underline];\n      novoArr.forEach((l, i) => {\n        if (l === isL) {\n          novoUnderline[i] = isL;\n          setUnderline([...novoUnderline]);\n        }\n        FimDeJogo(novoArr, novoUnderline);\n      });\n    } else {\n      if (contadorErro <= 5) {\n        if (!lista.includes(isL)) {\n          let tmpContador = contadorErro + 1;\n          setContadorErro(tmpContador);\n          if (tmpContador === 6) {\n            setCor('red');\n            setVerdadeOuFalso(true);\n            setAtivarBtn('');\n          }\n        }\n      }\n    }\n  }\n  function FimDeJogo(novoArr, novoUnderline) {\n    if (novoArr.toString() === novoUnderline.toString()) {\n      console.log('entrei no caio');\n      setCor('green');\n      setVerdadeOuFalso(true);\n      setAtivarBtn('');\n    }\n  }\n  const palavraChutada = ev => {\n    const pChute = ev.target.value;\n    setChutePalavra(pChute);\n    console.log('esse eu digitei ' + pChute);\n  };\n  function confirmarPalavra() {\n    setChutePalavra('');\n    if (palavra.toString() === chutePalavra) {\n      setUnderline([...palavra]);\n      setCor('green');\n      setVerdadeOuFalso(true);\n      setAtivarBtn('');\n    } else {\n      setUnderline([...palavra]);\n      setContadorErro(6);\n      setCor('red');\n      setVerdadeOuFalso(true);\n      setAtivarBtn('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jogo, {\n      inicializarJogo: inicializarJogo,\n      contadorErro: contadorErro,\n      palavra: palavra,\n      underline: underline,\n      cor: cor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Letras, {\n      lista: lista,\n      ativarBtn: ativarBtn,\n      verdadeOuFalse: verdadeOuFalse,\n      letraEscolhida: letraEscolhida\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chute, {\n      chutePalavra: chutePalavra,\n      confirmarPalavra: confirmarPalavra,\n      palavraChutada: palavraChutada,\n      verdadeOuFalse: verdadeOuFalse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bBAtuPqG4NIOENeQb1TaPOzoTBM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Chute","Jogo","Letras","palavras","useState","App","lista","setlista","contadorErro","setContadorErro","ativarBtn","setAtivarBtn","verdadeOuFalse","setVerdadeOuFalso","letrinha","setLetrinha","underline","setUnderline","palavra","setPalavra","litLetras","setListLetras","chutePalavra","setChutePalavra","cor","setCor","inicializarJogo","palavraSoteada","Math","floor","random","length","arrPalavra","listUnderline","map","_l","newarr","letraEscolhida","letra","includes","isL","verificar","novoArr","novoUnderline","forEach","l","i","FimDeJogo","tmpContador","toString","console","log","palavraChutada","ev","pChute","target","value","confirmarPalavra"],"sources":["C:/Users/alice/Downloads/Jogo-da-Forca/jogo-forca/src/App.js"],"sourcesContent":["import Chute from \"./components/Chute\";\r\nimport Jogo from \"./components/Jogo\";\r\nimport Letras from \"./components/Letras\";\r\nimport palavras from \"./palavras\"\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n\r\n  const [lista, setlista] = useState([]);\r\n  const [contadorErro, setContadorErro] = useState(0);\r\n  const [ativarBtn, setAtivarBtn] = useState(\"\");\r\n  const [verdadeOuFalse, setVerdadeOuFalso] = useState(true);\r\n  const [letrinha, setLetrinha] = useState('');\r\n  const [underline, setUnderline] = useState([]);\r\n  const [palavra, setPalavra] = useState('')\r\n  const [litLetras, setListLetras] = useState([])\r\n  const [chutePalavra, setChutePalavra] = useState('')\r\n  const [cor, setCor] = useState('')\r\n  \r\n\r\n  function inicializarJogo() {\r\n        const palavraSoteada = palavras[Math.floor(Math.random() * palavras.length)];\r\n        setPalavra(palavraSoteada);\r\n        const arrPalavra = [...palavraSoteada];\r\n        setListLetras(arrPalavra);\r\n        const listUnderline = arrPalavra.map(_l => \"_ \");\r\n        setUnderline(listUnderline);\r\n        setVerdadeOuFalso(false)\r\n        setAtivarBtn('ativado')\r\n        setContadorErro(0)\r\n        setCor('')\r\n        let newarr = [];\r\n        setlista(newarr);\r\n  };\r\n\r\n  function letraEscolhida(letra) {\r\n    if (!lista.includes(letra)) {\r\n        setlista([...lista, letra])\r\n        setLetrinha(letra)\r\n    }\r\n    let isL = letra\r\n    verificar(isL)\r\n         \r\n  }\r\n\r\n  function verificar(isL){\r\n    if(palavra.includes(isL)){\r\n      const novoArr = [...palavra];\r\n      const novoUnderline = [...underline];\r\n      novoArr.forEach((l, i) => {\r\n        if(l === isL){\r\n          novoUnderline[i] = isL;\r\n          setUnderline([...novoUnderline])\r\n        }\r\n        FimDeJogo(novoArr, novoUnderline);\r\n      })\r\n    }else{ \r\n      if(contadorErro <= 5){\r\n        if(!lista.includes(isL)){\r\n          let tmpContador = contadorErro + 1;\r\n          setContadorErro(tmpContador);\r\n            if(tmpContador === 6){\r\n              setCor('red')\r\n              setVerdadeOuFalso(true)\r\n              setAtivarBtn('')\r\n            }\r\n        }\r\n    }\r\n      \r\n    }\r\n  }\r\n  function FimDeJogo(novoArr, novoUnderline){\r\n    if(novoArr.toString() === novoUnderline.toString()){\r\n      console.log('entrei no caio')\r\n      setCor('green')\r\n      setVerdadeOuFalso(true)\r\n      setAtivarBtn('')\r\n    }\r\n  }\r\n  const palavraChutada = (ev)=> {\r\n    const pChute = ev.target.value;\r\n    setChutePalavra(pChute)\r\n    console.log('esse eu digitei '+ pChute);\r\n   \r\n}\r\nfunction confirmarPalavra(){\r\n    setChutePalavra('')\r\n    if(palavra.toString() === chutePalavra){\r\n      setUnderline([...palavra])\r\n      setCor('green')\r\n      setVerdadeOuFalso(true)\r\n      setAtivarBtn('')\r\n    }else{\r\n      setUnderline([...palavra])\r\n      setContadorErro(6)\r\n      setCor('red')\r\n      setVerdadeOuFalso(true)\r\n      setAtivarBtn('')\r\n    }\r\n}\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <Jogo\r\n        inicializarJogo={inicializarJogo}\r\n        contadorErro={contadorErro}\r\n        palavra={palavra}\r\n        underline={underline}\r\n        cor={cor}\r\n      />\r\n      <Letras\r\n        lista={lista}\r\n        ativarBtn={ativarBtn}\r\n        verdadeOuFalse={verdadeOuFalse}\r\n        letraEscolhida={letraEscolhida}\r\n      />\r\n      <Chute\r\n        chutePalavra={chutePalavra}\r\n        confirmarPalavra={confirmarPalavra}\r\n        palavraChutada={palavraChutada}\r\n        verdadeOuFalse={verdadeOuFalse}\r\n      />\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}